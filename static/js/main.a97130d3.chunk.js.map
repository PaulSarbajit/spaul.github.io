{"version":3,"sources":["Components/ShoppingItems/ShoppingItem/ShoppingItem.js","Components/ShoppingItems/ShoppingItems.js","Components/Footer/Footer.js","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/OrderSummary/OrderSummary.js","Container/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["shoppingItem","props","className","src","item","image","alt","brandName","productName","quantity","price","mrf","onClick","clicked","addItem","qty","removeItem","ShoppingItems","shoppingItems","Object","keys","this","map","i","key","addIndItem","removeIndItem","addCartClick","Component","searchInput","show","total","checkoutClicked","disabled","backdrop","modal","Fragment","modalClose","style","transform","opacity","children","orderSummary","color","fontWeight","totalPrice","SearchFeed","state","items","totalQty","showQty","showPrice","showDetails","showModal","addIndividualItemHandler","setState","removeIndividualItemHandler","addToCartButtonClickHandler","checkoutButtonHandler","modalCloseHandler","completeBuyHandler","alert","window","location","reload","axios","get","then","res","data","catch","err","console","log","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a97130d3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ShoppingItem.css'\r\n\r\nconst shoppingItem = props => {\r\n    return (\r\n        <div className=\"ShoppingItem\">\r\n            <div className=\"image\">\r\n                <img src={props.item.image} alt=\"Smiley face\" />\r\n            </div>\r\n            <div className=\"content\">\r\n                <h4>{props.item.brandName}</h4>\r\n                <p>{props.item.productName}</p>\r\n                <p>{props.item.quantity}</p>\r\n                <p>MRP {props.item.price}</p>\r\n                <p><strong>Rs {props.item.mrf}</strong></p>\r\n                <div className=\"buttons\">\r\n                    <button className=\"addToCartBtn\" onClick={props.clicked}>ADD TO CART</button>\r\n                    <div className=\"quantityButtons\">\r\n                        <button onClick={props.addItem}>+</button>\r\n                        <span>{props.item.qty}</span>\r\n                        <button onClick={props.removeItem}>-</button>                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"clearFloat\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default shoppingItem;","import React, { Component } from \"react\";\r\n\r\nimport './ShoppingItems.css';\r\nimport ShoppingItem from './ShoppingItem/ShoppingItem';\r\n\r\n\r\n\r\nclass ShoppingItems extends Component {\r\n\r\n    render(){\r\n\r\n        let shoppingItems = Object.keys(this.props.shoppingItems)\r\n            .map((item, i) => {\r\n                return <ShoppingItem key={this.props.shoppingItems[item].brandName + i} \r\n                item={this.props.shoppingItems[item]}\r\n                addItem={() => this.props.addIndItem(item)}\r\n                removeItem={() => this.props.removeIndItem(item)}\r\n                clicked={this.props.addCartClick} />;\r\n            })\r\n\r\n        return(\r\n            <div className=\"ShoppingItems\">\r\n                {shoppingItems}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default ShoppingItems;","import React from \"react\";\r\n\r\nimport './Footer.css';\r\n\r\nconst searchInput = props => {\r\n    return(\r\n        <div className=\"Footer\">\r\n           <div className=\"details\">\r\n               <p>QTY {props.show ? props.qty : 0}</p>\r\n               <p>Total {props.show ? props.total : 0}</p>\r\n           </div>\r\n           <div className=\"checkoutButton\">\r\n                <button onClick={props.checkoutClicked} disabled={props.disabled}>CHECKOUT</button>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default searchInput;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport './Modal.css';\r\n\r\nconst modal = props => {\r\n    return(\r\n        <React.Fragment>\r\n            <Backdrop show={props.show} clicked={props.modalClose} />        \r\n            <div className=\"Modal\"\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default modal;","import React from 'react';\r\n\r\nimport './OrderSummary.css';\r\n\r\nconst orderSummary = props => {\r\n    return (\r\n        <div className=\"OrderSummary\">\r\n            <h3>ORDER SUMMARY</h3>\r\n            <p><strong>Total Price: </strong> \r\n            Rs.<span style={{color: 'red', fontWeight: 'bold'}}>{props.totalPrice}</span></p>\r\n            <button onClick={props.clicked}>COMPLETE BUY!</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ShoppingItems from '../Components/ShoppingItems/ShoppingItems';\r\nimport Footer from '../Components/Footer/Footer';\r\nimport Modal from '../Components/UI/Modal/Modal';\r\nimport OrderSummary from '../Components/OrderSummary/OrderSummary';\r\nimport './ShoppingList.css';\r\n\r\nclass SearchFeed extends Component {\r\n\r\n    state = {\r\n        items: {},\r\n        totalQty: 0,\r\n        totalPrice: 0,\r\n        showQty: 0,\r\n        showPrice: 0,\r\n        showDetails: false,\r\n        showModal: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://shopping-list-aa7d9.firebaseio.com/Items.json')\r\n            .then(res => {\r\n                this.setState({items: res.data});\r\n                // console.log(this.state.items);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state.showQty)\r\n    }\r\n\r\n    addIndividualItemHandler = (item) => {\r\n\r\n        const items = {\r\n            ...this.state.items,\r\n            [item]:{\r\n                ...this.state.items[item],\r\n                qty: this.state.items[item].qty + 1\r\n            },\r\n        };\r\n        const totalQty =  this.state.totalQty + 1\r\n        const totalPrice = this.state.totalPrice + items[item].mrf\r\n        this.setState({items: items, totalQty: totalQty, totalPrice: totalPrice});\r\n        \r\n    }\r\n\r\n    removeIndividualItemHandler = (item) => {\r\n        if(!this.state.items[item].qty){\r\n            return;\r\n        }\r\n        const items = {\r\n            ...this.state.items,\r\n            [item]:{\r\n                ...this.state.items[item],\r\n                qty: this.state.items[item].qty - 1\r\n            }\r\n        }\r\n        const totalQty = this.state.totalQty - 1\r\n        const totalPrice = this.state.totalPrice - items[item].mrf\r\n        this.setState({items: items, totalQty: totalQty, totalPrice: totalPrice})\r\n        const showQty = totalQty;\r\n        const showPrice = totalPrice;\r\n        this.setState({showQty: showQty, showPrice: showPrice})\r\n    }\r\n\r\n    addToCartButtonClickHandler = () => {\r\n        const showQty = this.state.totalQty;\r\n        const showPrice = this.state.totalPrice;\r\n        this.setState({showQty: showQty, showPrice: showPrice, showDetails: true})\r\n    }\r\n\r\n    checkoutButtonHandler = () => {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    modalCloseHandler = () => {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    completeBuyHandler = () => {\r\n        alert(\"Purchase was successful\");\r\n        this.setState({showModal: false});\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Modal show={this.state.showModal} modalClose={this.modalCloseHandler}>\r\n                    <OrderSummary totalPrice={this.state.showPrice} clicked={this.completeBuyHandler} />\r\n                </Modal>\r\n                <div className='ShoppingList'>\r\n                    <h1>Shopping Cart App</h1>\r\n                    <ShoppingItems shoppingItems={this.state.items}\r\n                    addIndItem={this.addIndividualItemHandler}\r\n                    removeIndItem={this.removeIndividualItemHandler}\r\n                    addCartClick={this.addToCartButtonClickHandler} />\r\n\r\n                    <Footer qty={this.state.showQty} \r\n                    total={this.state.showPrice} \r\n                    show={this.state.showDetails}\r\n                    checkoutClicked={this.checkoutButtonHandler}\r\n                    disabled={!this.state.showQty} />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default SearchFeed;","import React, { Component } from 'react';\n\nimport ShoppingList from './Container/ShoppingList';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ShoppingList />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}